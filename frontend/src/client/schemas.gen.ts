// This file is auto-generated by @hey-api/openapi-ts

export const Body_submit_job_api_jobs_postSchema = {
    properties: {
        file: {
            type: 'string',
            format: 'binary',
            title: 'File'
        }
    },
    type: 'object',
    required: ['file'],
    title: 'Body_submit_job_api_jobs_post'
} as const;

export const HTTPValidationErrorSchema = {
    properties: {
        detail: {
            items: {
                '$ref': '#/components/schemas/ValidationError'
            },
            type: 'array',
            title: 'Detail'
        }
    },
    type: 'object',
    title: 'HTTPValidationError'
} as const;

export const JobCreatedResponseSchema = {
    properties: {
        job_id: {
            type: 'string',
            format: 'uuid',
            title: 'Job Id'
        },
        status: {
            '$ref': '#/components/schemas/JobStatus',
            default: 'queued'
        }
    },
    type: 'object',
    required: ['job_id'],
    title: 'JobCreatedResponse'
} as const;

export const JobExtraSchema = {
    properties: {
        filename: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Filename'
        },
        ocr_path: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Ocr Path'
        },
        result_path: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Result Path'
        },
        artifacts_dir: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Artifacts Dir'
        },
        image_paths: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: 'Image Paths'
        },
        visualisations: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: 'Visualisations'
        },
        problem_visualisations: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: 'Problem Visualisations'
        }
    },
    additionalProperties: true,
    type: 'object',
    title: 'JobExtra'
} as const;

export const JobResultResponseSchema = {
    properties: {
        job_id: {
            type: 'string',
            format: 'uuid',
            title: 'Job Id'
        },
        result: {
            title: 'Result'
        }
    },
    type: 'object',
    required: ['job_id', 'result'],
    title: 'JobResultResponse'
} as const;

export const JobStatusSchema = {
    type: 'string',
    enum: ['queued', 'processing', 'ocr_running', 'ocr_complete', 'pipeline_running', 'completed', 'failed', 'unknown'],
    title: 'JobStatus'
} as const;

export const JobStatusResponseSchema = {
    properties: {
        job_id: {
            type: 'string',
            format: 'uuid',
            title: 'Job Id'
        },
        status: {
            '$ref': '#/components/schemas/JobStatus'
        },
        filename: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Filename'
        },
        created_at: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Created At'
        },
        updated_at: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Updated At'
        },
        result_path: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Result Path'
        },
        message: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Message'
        },
        extra: {
            '$ref': '#/components/schemas/JobExtra'
        }
    },
    type: 'object',
    required: ['job_id', 'status'],
    title: 'JobStatusResponse'
} as const;

export const ValidationErrorSchema = {
    properties: {
        loc: {
            items: {
                anyOf: [
                    {
                        type: 'string'
                    },
                    {
                        type: 'integer'
                    }
                ]
            },
            type: 'array',
            title: 'Location'
        },
        msg: {
            type: 'string',
            title: 'Message'
        },
        type: {
            type: 'string',
            title: 'Error Type'
        }
    },
    type: 'object',
    required: ['loc', 'msg', 'type'],
    title: 'ValidationError'
} as const;