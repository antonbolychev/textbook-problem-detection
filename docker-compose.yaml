services:
  redis:
    image: redis:7-alpine
    volumes:
      - redis-data:/data
    networks:
      - internal

  backend:
    build:
      context: ./backend
    command: uv run fastapi run app/main.py --host 0.0.0.0 --port 8000
    env_file:
      - .env.prod
    environment:
      MODE: ${MODE?Variable not set}
      STORAGE_ROOT: /app/storage
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT?Variable not set}
      REDIS_DB: ${REDIS_DB?Variable not set}
      DATALAB_API_KEY: ${DATALAB_API_KEY?Variable not set}
      OPENAI_API_KEY: ${OPENAI_API_KEY?Variable not set}
    depends_on:
      - redis
    volumes:
      - backend-storage:/app/storage
    networks:
      - internal
      - traefik-public
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.constraint-label=traefik-public
      - traefik.http.services.${STACK_NAME?Variable not set}-backend.loadbalancer.server.port=8000
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-http.rule=Host(`${BACKEND_DOMAIN?Variable not set}`)
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-http.entrypoints=http
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-https.rule=Host(`${BACKEND_DOMAIN?Variable not set}`)
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-https.entrypoints=https
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-https.tls=true
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-https.tls.certresolver=le
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-http.middlewares=https-redirect

  arq-worker:
    build:
      context: ./backend
    command: uv run arq_worker/worker.py
    env_file:
      - .env.prod
    environment:
      MODE: ${MODE?Variable not set}
      STORAGE_ROOT: /app/storage
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT?Variable not set}
      REDIS_DB: ${REDIS_DB?Variable not set}
      DATALAB_API_KEY: ${DATALAB_API_KEY?Variable not set}
      OPENAI_API_KEY: ${OPENAI_API_KEY?Variable not set}
    depends_on:
      - redis
    volumes:
      - backend-storage:/app/storage
    networks:
      - internal

  frontend:
    build:
      context: ./frontend
      args:
        - VITE_API_BASE_URL=https://${BACKEND_DOMAIN?Variable not set}:8000
        - VITE_WS_BASE_URL=wss://${BACKEND_DOMAIN?Variable not set}:8000
        - NODE_ENV=production
    env_file:
      - .env.prod
    depends_on:
      - backend
    networks:
      - traefik-public
    ports:
      - "5173:80"
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.constraint-label=traefik-public
      - traefik.http.services.${STACK_NAME?Variable not set}-frontend.loadbalancer.server.port=80
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-http.rule=Host(`${FRONTEND_DOMAIN?Variable not set}`)
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-http.entrypoints=http
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-https.rule=Host(`${FRONTEND_DOMAIN?Variable not set}`)
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-https.entrypoints=https
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-https.tls=true
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-https.tls.certresolver=le
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-http.middlewares=https-redirect

volumes:
  redis-data:
  backend-storage:

networks:
  internal:
  traefik-public:
    external: true
